# Install and configure the Live Helper Chat application on Centos 7.9

- name: Live Helper Chat Setup
  hosts: localhost
  tasks:

# 1 - Update the system
  - name: Update the system
    apt:
      name: '*'
      state: latest
      update_cache: yes

# 6 - Install PHP and dependencies
  - name: Install PHP and dependencies
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - php-json
      - php-cli
      - php-gd
      - php-xml
      - php-common
      - php-pdo
      - php-mysqlnd
      - php-mbstring
      - php
      - php-bcmath
      - php-imap
      - php-geos
      - php-fpm
      - php-opcache
      - git
      - curl

# 2 - Download and install Composer
  - name: Download and install Composer
    shell: curl -sS https://getcomposer.org/installer -o composer-setup.php
    args:
      chdir: /tmp

# 3 - Install Composer
  - name: Install Composer
    shell: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer

# 7 - Install Nginx and screen
  - name: Install Nginx and screen
    apt:
      name: nginx
      state: latest

# 11 - Install MySQL server
  - name: Install MySQL server
    apt:
      name: mysql-server
      state: present

# 12 - Start MySQL service
  - name: Start MySQL service
    service:
      name: mysql
      state: started
      enabled: yes

# 14 - Generate a random password
  - name: Generate a random password
    shell: >-
          openssl rand -hex 14
    register: mysql_root_pass


# 16 - Set the root password
  - name: root | set root password
    shell: >-
          mysqladmin -u root
          --password=''
          password "{{mysql_root_pass.stdout}}"

# 17 - Create a .my.cnf file
  - name: Create a .my.cnf file
    file:
      path: /root/.my.cnf
      state: touch
      owner: root
      group: root
      mode: 0600

# 18 - Add .my.cnf
  - name: Add .my.cnf
    lineinfile:
      path: /root/.my.cnf
      line: "{{ item }}"
    with_items:
      - "[client]"
      - user=root
      - password={{mysql_root_pass.stdout}}

# 19 - Reload privilege tables
  - name: Reload privilege tables
    command: 'mysql -ne "{{ item }}"'
    with_items:
      - FLUSH PRIVILEGES
    changed_when: False

 # 25 - Generate a random password for mysql user
  - name: Generate a random password
    shell: >-
          openssl rand -hex 14
    register: lhc_db_pass

# 26 - Add the lhc database and user
  - name: Add the lhc database
    command: 'mysql -ne "{{ item }}"'
    with_items:
        - CREATE database lhc;
        - CREATE USER 'lhc'@'%' IDENTIFIED BY '{{lhc_db_pass.stdout}}';
        - GRANT ALL PRIVILEGES ON lhc.* TO 'lhc'@'%';
        - FLUSH PRIVILEGES;

 # 27 - clone the Live Helper Chat application to /usr/local/src
  - name: clone the Live Helper Chat application to /usr/local/src
    shell: cd /usr/local/src/ && git clone https://github.com/LiveHelperChat/livehelperchat.git
    

# 27.1 - Remove index.html from /var/www/html
  - name: Remove index.html from /var/www/html
    file:
      path: /var/www/html/index.html
      state: absent

# 28 - Move the content from /usr/local/src/livehelperchat/lhc_web to /var/www/html
  - name: Move the content from /usr/local/src/livehelperchat/lhc_web to /var/www/html
    shell: mv /usr/local/src/livehelperchat/lhc_web/* /var/www/html

# 29 - Update the 777 permission for the following directoy's
  - name: Set directory permissions
    file:
      path: "{{ item.path }}"
      mode: "0777"
      recurse: "{{ item.recurse | default('yes') }}"
    with_items:
      - { path: '/var/www/html/settings/', recurse: 'yes' }
      - { path: '/var/www/html/var/storage', recurse: 'yes' }
      - { path: '/var/www/html/var/userphoto', recurse: 'yes' }
      - { path: '/var/www/html/var/storageform', recurse: 'yes' }
      - { path: '/var/www/html/var/storageadmintheme', recurse: 'yes' }
      - { path: '/var/www/html/var/botphoto', recurse: 'yes' }
      - { path: '/var/www/html/var/bottrphoto', recurse: 'yes' }
      - { path: '/var/www/html/var/storageinvitation', recurse: 'yes' }
      - { path: '/var/www/html/var/storagedocshare', recurse: 'yes' }
      - { path: '/var/www/html/var/storagetheme', recurse: 'yes' }
      - { path: '/var/www/html/var/tmpfiles', recurse: 'yes' }

# 30 - Move /var/www/html/cli/install-cli.php to /var/www/html
  - name: Move /var/www/html/cli/install-cli.php to /var/www/html
    shell: mv /var/www/html/cli/install-cli.php /var/www/html

# 31 - Move /var/www/html/cli/example.settings.ini to /var/www/html/settings.ini
  - name: Move /var/www/html/cli/example.settings.ini to /var/www/html/settings.ini
    shell: mv /var/www/html/cli/example.settings.ini /var/www/html/settings.ini

# 32 - Update the mysql details in the /var/www/html/settings.ini
  - name: Update database details in configuration file
    lineinfile:
      path: /var/www/html/settings.ini
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
      state: present
    with_items:
      - { regexp: '^host = .*', line: 'host = localhost' }
      - { regexp: '^user = .*', line: 'user = lhc' }
      - { regexp: '^password = .*', line: 'password = "{{ lhc_db_pass.stdout }}"'}
      - { regexp: '^database = .*', line: 'database = lhc' }
      - { regexp: '^port = .*', line: 'port = 3306' }


# 34 - Install Node.js, npm and Redis
  - name: Install Node.js
    apt:
      name: "{{ item }}"
      state: present
    with_items:
      - nodejs
      - npm
      - redis

# 35 - Start Redis service
  - name: Start Redis service
    service:
      name: redis
      state: started
      enabled: yes

# 36 - Clone the LiveHelperChat/NodeJS-Helper from git to /usr/local/src
  - name: Clone the LiveHelperChat/NodeJS-Helper from git to /usr/local/src
    shell: cd /usr/local/src/ && git clone https://github.com/LiveHelperChat/NodeJS-Helper.git


# 37 - Move the content from /usr/local/src/NodeJS-Helper to /var/www/html/extension
  - name: Move the content from /usr/local/src/NodeJS-Helper to /var/www/html/extension
    shell: mv /usr/local/src/NodeJS-Helper/nodejshelper /var/www/html/extension/

# 38 - Install composer dependencies from /var/www/html/extension/nodejshelper
  - name: Install composer dependencies from /var/www/html/extension/nodejshelper
    shell: composer install
    args:
      chdir: /var/www/html/extension/nodejshelper

# 39 - Install npm dependencies from /var/www/html/extension/nodejshelper/serversc/lhc
  - name: Install npm dependencies from /var/www/html/extension/nodejshelper/serversc/lhc
    shell: npm install
    args:
      chdir: /var/www/html/extension/nodejshelper/serversc/lhc

  # 40 - Copy the secret hash from /var/www/html/settings/settings.ini.php
  - name: Retrieve secret hash from settings.ini.php
    shell: grep "secrethash" /var/www/html/settings/settings.ini.php  | cut -d "'" -f 4
    register: secret_hash_result

# 41 - Update secret hash in server.js
  - name: Update secret hash in server.js
    replace:
      path: /var/www/html/extension/nodejshelper/serversc/lhc/server.js
      regexp: "secretHash: '<use_your_secret_hash>'"
      replace: "secretHash: '{{ secret_hash_result.stdout }}'"
      backup: yes

# 42 - Make a copy make copy of /var/www/html/extension/nodejshelper/settings/settings.ini.default.php to /var/www/html/extension/nodejshelper/settings/settings.ini.default.php
  - name: Make a copy of settings.ini.default.php
    copy:
      src: /var/www/html/extension/nodejshelper/settings/settings.ini.default.php
      dest: /var/www/html/extension/nodejshelper/settings/settings.ini.php

# 43 - Clone the LiveHelperChat/lhc-php-resque to /usr/local/src
  - name: Clone the LiveHelperChat/lhc-php-resque to /usr/local/src
    shell: cd /usr/local/src/ && git clone https://github.com/LiveHelperChat/lhc-php-resque.git


# 44 - Move the directory from /usr/local/src/lhc-php-resque/lhcphpresque to /var/www/html/extension/
  - name: Move the directory from /usr/local/src/lhc-php-resque/lhcphpresque to /var/www/html/extension/
    shell: mv /usr/local/src/lhc-php-resque/lhcphpresque /var/www/html/extension/

# 44.1 - clone the configuration to /usr/local/src
  - name: clone the Live Helper Chat application to /opt/live-helper
    shell: cd /usr/local/src && git clone https://github.com/LiveHelperChat/livehelperchat.git

# 45 - copy the nginx configuration jinja2 template from /opt/live-helper/Workout/livehelperchat.conf.j2 to /etc/nginx/conf.d
  - name: copy the nginx configuration jinja2 template
    copy:
      src:  /usr/local/src/Workout/livehelperchat.conf
      dest: /etc/nginx/conf.d/
      remote_src: yes

# 46 - Copy the resque.php from /var/www/html/extension/lhcphpresque/doc/resque.php to  /var/www/html/
  - name: Copy the resque.php
    copy:
      src: /var/www/html/extension/lhcphpresque/doc/resque.php
      dest: /var/www/html/
      follow: yes

# 47 - Install composer dependencies from /var/www/html/extension/lhcphpresque
  - name: Install composer dependencies from /var/www/html/extension/lhcphpresque
    shell: composer update
    args:
      chdir: /var/www/html/extension/lhcphpresque

# 48 - Add cron job for lhcphpresque at reboot
  - name: Add cron job for lhcphpresque at reboot
    cron:
      name: "Run lhcphpresque at reboot"
      special_time: reboot
      job: "cd /var/www/web/extension/lhcphpresque/doc/ && ./phpresque.sh >> /dev/null 2>&1"

# 49 - Add cron job to create runresque.lock
  - name: Add cron job to create runresque.lock
    cron:
      name: "Create runresque.lock"
      minute: "40"
      hour: "7"
      job: "/bin/touch /var/www/web/extension/lhcphpresque/doc/runresque.lock > /dev/null 2>&1"

# 50 - Add cron job for resque.sh
  - name: Add cron job for resque.sh
    cron:
      name: "Run resque.sh every minute"
      job: "cd /var/www/web/extension/lhcphpresque/doc && ./resque.sh >> /dev/null 2>&1"

# 51 - Add cron job for nodejshelper restart
  - name: Add cron job for nodejshelper restart
    cron:
      name: "Restart nodejshelper daily"
      minute: "1"
      hour: "1"
      job: "/usr/sbin/service nodejshelper restart > /dev/null 2>&1"

# 52 - restart Nginx
  - name: restart Nginx
    service:
      name: nginx
      state: restarted
